=== modified file 'application.pro'
--- application.pro	2020-01-01 09:02:34 +0000
+++ application.pro	2020-01-02 18:05:06 +0000
@@ -35,7 +35,8 @@
     sources/bookmarkmenu.h \
     sources/bookmarkdialog.h \
     sources/database.h \
-    sources/mainwindow.h
+    sources/mainwindow.h \
+    sources/application.h
 
 SOURCES += \
     sources/settings.cpp \

=== added file 'sources/application.h'
--- sources/application.h	1970-01-01 00:00:00 +0000
+++ sources/application.h	2020-01-02 18:02:50 +0000
@@ -0,0 +1,42 @@
+/*
+
+Copyright 2020 vit9696
+
+This file is part of qpdfview.
+
+qpdfview is free software: you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation, either version 2 of the License, or
+(at your option) any later version.
+
+qpdfview is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with qpdfview.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#ifndef APPLICATION_H
+#define APPLICATION_H
+
+#include <QApplication>
+#include <QEvent>
+
+namespace qpdfview
+{
+
+class Application : public QApplication
+{
+    Q_OBJECT
+
+public:
+    Application(int &argc, char **argv);
+    virtual bool event(QEvent *event);
+};
+
+} // qpdfview
+
+#endif // APPLICATION_H

=== modified file 'sources/main.cpp'
--- sources/main.cpp	2020-01-01 09:02:34 +0000
+++ sources/main.cpp	2020-01-02 18:06:09 +0000
@@ -28,6 +28,7 @@
 #include <QApplication>
 #include <QDebug>
 #include <QDir>
+#include <QFileOpenEvent>
 #include <QInputDialog>
 #include <QLibraryInfo>
 #include <QMessageBox>
@@ -57,6 +58,7 @@
 
 #endif // WITH_SYNCTEX
 
+#include "application.h"
 #include "documentview.h"
 #include "database.h"
 #include "mainwindow.h"
@@ -453,6 +455,42 @@
 
 } // anonymous
 
+namespace qpdfview {
+
+Application::Application(int &argc, char **argv)
+    : QApplication(argc, argv)
+{
+    setOrganizationDomain("local.qpdfview");
+    setOrganizationName("qpdfview");
+    setApplicationName("qpdfview");
+
+    setApplicationVersion(APPLICATION_VERSION);
+
+#ifdef Q_OS_MAC
+    // On macOS menu icons should not be shown, and app icons are determined by .app bundle.
+    setAttribute(Qt::AA_DontShowIconsInMenus);
+#else
+    setWindowIcon(QIcon(":icons/qpdfview"));
+#endif
+
+#if QT_VERSION >= QT_VERSION_CHECK(5,0,0)
+    setAttribute(Qt::AA_UseHighDpiPixmaps);
+#endif // QT_VERSION
+}
+
+bool Application::event(QEvent *event)
+{
+    if(event->type() == QEvent::FileOpen) {
+        // On macOS and potentially other systems this handles "Open With" and "Drag & Drop" after exec().
+        QFileOpenEvent *openEvent = static_cast<QFileOpenEvent *>(event);
+        mainWindow->jumpToPageOrOpenInNewTab(openEvent->file(), -1, true, QRectF(), quiet);
+    }
+
+    return QApplication::event(event);
+}
+
+} // qpdfview
+
 int main(int argc, char** argv)
 {
     qRegisterMetaType< QList< QRectF > >("QList<QRectF>");
@@ -461,21 +499,7 @@
 
     parseWorkbenchExtendedSelection(argc, argv);
 
-    QApplication application(argc, argv);
-
-    QApplication::setOrganizationDomain("local.qpdfview");
-    QApplication::setOrganizationName("qpdfview");
-    QApplication::setApplicationName("qpdfview");
-
-    QApplication::setApplicationVersion(APPLICATION_VERSION);
-
-    QApplication::setWindowIcon(QIcon(":icons/qpdfview"));
-
-#if QT_VERSION >= QT_VERSION_CHECK(5,0,0)
-
-    QApplication::setAttribute(Qt::AA_UseHighDpiPixmaps);
-
-#endif // QT_VERSION
+    Application application(argc, argv);
 
     loadTranslators();
 

=== modified file 'sources/mainwindow.cpp'
--- sources/mainwindow.cpp	2020-01-01 09:12:21 +0000
+++ sources/mainwindow.cpp	2020-01-02 13:47:31 +0000
@@ -3120,7 +3120,10 @@
     }
     else
     {
+#ifndef Q_OS_MAC
+        // On macOS menu icons are not part of the design.
         action->setIconVisibleInMenu(true);
+#endif
 
         connect(action, SIGNAL(triggered()), member);
     }

